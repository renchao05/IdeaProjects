<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chaoRen.myBatis.dao.UserMapper">
    <select id="getUserById" resultType="com.chaoRen.myBatis.bean.User">
        select *
        from t_user
        where id = #{id}
    </select>

    <select id="getUserByName" resultType="com.chaoRen.myBatis.bean.User">
        <bind name="_name" value="'%'+name+'%'"/>
        select * from t_user where user_name like #{_name}
    </select>

    <!--
    collection:指定要遍历的集合
    list类型的参数会特殊处理封装在map中，map的key就是list
    item:将当前遍历出的元素赋值给指定的变量
    separator:每个元素之间的分隔符
    open:遍历出所有结果拼接一个开始的字符
    close:遍历出所有结果拼接一个结束的字符
    index：索引。遍历list的时候index就是索引，item就是当前值
    遍历map的时候index表示的就是map的key,item就是map的值。
    -->
    <insert id="addUser">
        insert into t_user(user_name, password, email) values
        <foreach collection="list" item="user" separator=",">
            (#{user.userName},#{user.password},#{user.email})
        </foreach>
    </insert>

    <select id="getUserInId" resultType="com.chaoRen.myBatis.bean.User">
        select * from t_user where id in
        <foreach collection="list" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>

    <sql id="mySelect">
        <foreach collection="array" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </sql>
    <select id="getUserInArr" resultType="com.chaoRen.myBatis.bean.User">
        select * from t_user where id in
        <include refid="mySelect"/>
    </select>


    <select id="getUserByIdAndName" resultType="com.chaoRen.myBatis.bean.User">
        select * from t_user
        <choose>
            <when test="id != null">
                where id = #{id}
            </when>
            <when test="name != null">
                where user_name=#{name}
            </when>
            <otherwise>
                where id=1
            </otherwise>
        </choose>
    </select>

    <!--SQL代码段-->
    <sql id="myUpdate">
        <set>
            <if test="userName != null">
                user_name=#{userName},
            </if>
            <if test="password != null">
                password=#{password},
            </if>
            <if test="email != null">
                email=#{email}
            </if>
            where id = #{id}
        </set>
    </sql>
    <!--主代码-->
    <update id="updateUser">
        update t_user
        <include refid="myUpdate"/>
    </update>
</mapper>